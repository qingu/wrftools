#***************************************************************
# WRF Forecast Configuration File 
# 
# This is the top level configuration file for running 
# automated WRF forecasts. This will overide some settings in 
# 'namelist.wps' and 'namelist.input' files
#
# Environment variables can be accessed using ${var} syntax
# Local variables defined elswhere in the configuration can be 
# accessed using %(var) syntax.  If the variable inside {} or () 
# is not defined within the current environment, it will not be expanded.
#
# Due to the syntax of yaml, entries cannot begin with %; 
# to start an entry with a local variable reference, enclose 
# the entry in quotation marks, see examples below.
# 
# Although the file is nominally divided into sections by comments,
# logically it is a single dictionary which allows for most 
# flexibility.
#
#***************************************************************

#************************************************
# Timing
#************************************************
operational        : true                    # If true, start time is based on system time
delay              : 3                       # delay in hours to apply to system time
cycles             : [00, 12]                # round to the nearest one of these hours
start              : 2013-06-14 00:00:00     # first initial time 
end                : 2013-06-14 00:00:00     # final *inital time*, not forecast end time
init_interval      : 24                      # period between inital times
max_dom            : 1                       # maximum number of nests
fcst_hours         : 6                       # length of forecast


#************************************************
# Components to run
#************************************************
sst               : true     # fetch SST field from seperate source
fetch             : true     # fetch external files
fetch.gribmaster  : true     # see gribmaster section
fetch.sst         : true    
prepare           : true
simulate          : true
simulate.wps      : true     # run WPS 
simulate.ungrib   : true
simulate.geogrid  : true
simulate.metgrid  : true
simulate.wrf      : true     # run WRF
simulate.real     : true
simulate.ndown    : false
simulate.timing   : true 
simulate.status   : true     # write json status file specifying time of last update etc
post              : true     # run post-processing steps, see section post
post.upp          : false    # Universal Post Processor
post.metadata     : true     # add metadata as attributes to netcdf files
post.compress     : true     # compress wrfout files using NCO
post.hyperslab    : true     # hyperslab using ncks
power             : true     # calculate power production at points
visualise         : true     # see visualise section
visualise.ol      : true     # run openlayers visualisation (requiress VAPOR, ImageMagik)
extract           : true     # see tseries section
extract.tseries   : true     # extract time series of variables to points
finalise          : true     # remove files, move, archive
dispatch          : true     # See dispatch section


#************************************************
# Metadata. 
# Used to help compose directory names, and
# are also added as attributes to the output netcdf
# files. 
#************************************************
domain            : baseline_europe 
model             : WRF
model_run         : development
bdy_conditions    : GFS

metadata          :                        # everything within this will be copied into attributes
    domain        : "%(domain)"
    model         : "%(model)"
    model_run     : "%(model_run)"
    bdy_conditions : "%(bdy_conditions)"

#************************************************
# Shared  
#************************************************
base_dir          : $(HOME)/forecasting/domains                
wrftools_dir      : $(HOME)/code/wrftools/master                # location of local wrftools repository
working_dir       : "%(base_dir)/%(domain)/%(model_run)"        # this should replace the (confusing) working_dir
tmp_dir           : $(HOME)/forecasting/tmp                     # temporary directory
web_dir           : $(HOME)/web/forecast                       # convenience for copying plots

#************************************************
# Logging
#************************************************
log.name         : wrf_forecast
log.level        : DEBUG
log.fmt          : "%(message)s"                           # see logging module for format codes
log.mail         : false
log.mail.level   : INFO
log.mail.to      : sam.hawkins@vattenfall.com
log.mail.subject : "Operational WRF log"
log.mail.buffer  : 1000000

 
#************************************************
# Status file
#************************************************
status_file       : "%(working_dir)/json/status.json"           # write various status fields such as time completed etc




#************************************************
# Running/exception handling
#************************************************
dry_run           : false
full_trace        : true                                   # log a full stack trace of exceptions
fail_mode         : exit                                   # CONTINUE, EXIT
run_level         : run            # RUN, DUMMY
cmd_timing        : false

#************************************************
# Processors, job submission, queuing
#************************************************
queue:                                                          # queue to use. use false to submit directly using mpirun
  ungrib.exe  : false                                           # use a named queue to submit via SGE
  geogrid.exe : false
  metgrid.exe : false
  real.exe    : false
  ndown.exe   : false
  wrf.exe     : false
  ncl         : post.q
  nccopy      : post.q
  ncks        : post.q


host_file         : "%(working_dir)/hostfile"                # host file to use for mpirun, not needed if using SGE submission

job_template:
    all.q         : "%(wrftools_dir)/queue/template_all.sge"
    post.q        : "%(wrftools_dir)/queue/template_post.sge"


job_script        : "%(working_dir)/job.sge"                 # expanded template gets written here


num_procs: 
  ungrib.exe  : 1
  geogrid.exe : 1
  metgrid.exe : 8
  real.exe    : 1
  ndown.exe   : 1
  wrf.exe     : 24
  ncl         : 1





poll_interval: 
  ungrib.exe   : 2
  geogrid.exe  : 1
  metgrid.exe  : 2
  real.exe     : 1
  ndown.exe    : 1
  wrf.exe      : 10
  ncl          : 1
  nccopy       : 1
  ncks         : 1


max_job_time: 
  ungrib.exe  : 10
  geogrid.exe : 10
  metgrid.exe : 10
  real.exe    : 5
  ndown.exe   : 5
  wrf.exe     : 60
  ncl         : 10
  nccopy      : 10
  ncks        : 10

queue_log:
  ungrib.exe  : ungrib.log
  geogrid.exe : geogrid.log
  metgrid.exe : metgrid.log
  real.exe    : real.log
  ndown.exe   : ndown.log
  wrf.exe     : wrf.log
  nccopy      : nccopy.log
  ncl         : ncl.log
  ncks        : ncks.log
  
#************************************************
# Prepare/simulate
#************************************************
wps_dir           : $(HOME)/WPSV35                              # location of WPS code
wrf_dir           : $(HOME)/WRFV35                              # location of WRF code 
wps_run_dir       : "%(working_dir)/wps"                        # subdirectory to run WPS from; namelists and grib files will be linked here
wrf_run_dir       : "%(working_dir)/wrf"                        # subdirectoty to run WRF from; namelists and met_em files will be linked here   
geo_em_dir        : "%(working_dir)/geo_em"                     # location of geo_em files
met_em_dir        : "%(working_dir)/met_em/%iY-%im-%id_%iH"     # location of met_em files
namelist_wps      : "%(working_dir)/namelist.wps"               # location of namelist.wps file to use
namelist_input    : "%(working_dir)/namelist.input"             # location of namelist.input file to use
grb_dir           : $(HOME)/forecasting/domains/GFS/operational # location of boundary conditions once downloaded

grb_input_fmt     : 
    GFS: "%(grb_dir)/GFS_Global_0p5deg_%iy%im%id_%iH%iM_fh%fH.grb"


grb_input_delay :       # number of hours delay to apply to initial time to derive boundary conditions filename
    SST: 24
    
    
history_interval  : 60
bdy_interval      : 3                                           # hours between boundary conditions
vtable            :                                             # Vtables to use in the form prefix: vtable
    GFS: Vtable.GFS    

wrfout_dir        : "%(working_dir)/wrfout"                     # move wrfout files here after WRF has completed 

prepare.create    : 
    - "%(working_dir)/geo_em"
    - "%(working_dir)/met_em"
    - "%(working_dir)/geo_em"
    - "%(working_dir)/tseries"
    - "%(working_dir)/plots"
    - "%(working_dir)/rsl"
    - "%(working_dir)/wrf"
    - "%(working_dir)/wps"
    - "%(working_dir)/namelist"

prepare.remove    :                                                          # list of arguments to consecutive linux rm commands. Be careful!
    - "%(ncl_log)"
    - "%(gm_log)"
    - "%(wrf_run_dir)/rsl.*"  
    - "%(wps_run_dir)/ungrib.log*"
    - "%(wps_run_dir)/metgrid.log*"
    - "%(wps_run_dir)/geogrid.log*"
    - "%(working_dir)/plots/%iHZ/*.*"
    - "%(working_dir)/plots/%iHZ/*.*"

prepare.link      :                                                          # list of arguments to consecutive linux ln -sf commands
  - "%(wrf_dir)/run/*.exe           %(wrf_run_dir)"
  - "%(wrf_dir)/run/RRTM*           %(wrf_run_dir)"
  - "%(wrf_dir)/run/*.TBL           %(wrf_run_dir)"
  - "%(wps_dir)/*.exe               %(wps_run_dir)"
  - "%(wps_dir)/link_grib.csh       %(wps_run_dir)"
  - "%(wps_dir)/metgrid/METGRID.TBL %(wps_run_dir)"
  - "%(wps_dir)/geogrid/GEOGRID.TBL %(wps_run_dir)"

prepare.copy      : []       # list of arguments to consecutive linux cp commands


#************************************************
# Post
#************************************************
upp_dir                 : $(HOME)/UPPV1.0
compression_level       : 9                # Compresion level passed to -L flag
post.met                : false            # MET verification tool
post.hyperslab.dimspec  : "-d bottom_top,0,25 -d bottom_top_stag,0,26"                 # d argument to ncks

#************************************************
# Gribmaster settings
# Note that most gribmaster settings are defined in the gribmaster/conf directory
# these are just the command line options
#************************************************
gm_dir            : /home/slha/gribmaster
gm_log            : "%(working_dir)/gribmaster.log"
gm_dataset        : gfs004grb2
gm_transfer       : http
grb_fmt           : grib2
gm_sleep          : 10         # number of minutes to wait after failure
gm_max_attempts   : 6
convert_grb       : false

#*****************************************************
# SST settings
#*****************************************************
sst_delay           : 24                    # number of hours SST field is delayed
sst_server          : polar.ncep.noaa.gov
sst_server_dir      : /pub/history/sst/ophi
sst_local_dir       : "$(HOME)/forecasting/domains/SST"
sst_filename        : rtg_sst_grb_hr_0.083.%iY%im%id
sst_vtable          : Vtable.SST


#*******************************************************
# Visualisation settings
# Python will set the following environment
# variables which can be used within NCL
# FCST_FILE       - the full WRF filename 
# NCL_OUT_DIR     - output directory for plots
# LOCATIONS_FILE  - file containing locations of interest
# NEST_ID         - 2-digit integer indentifiying nest
#********************************************************
visualise.ncl  : true
ncl_out_type   : png                                                                   # png, pdf etc
ncl_code_dir   : "%(wrftools_dir)/ncl" 
ncl_out_dir    : "%(working_dir)/plots/%iHZ"                                           # inital time will be substitued in
ncl_code       : 
    - "%(ncl_code_dir)/wrf_surface.ncl"
#    - "%(ncl_code_dir)/wrf_time_series.ncl"
    - "%(ncl_code_dir)/wrf_precip.ncl"
    - "%(ncl_code_dir)/wrf_t2.ncl"
    - "%(ncl_code_dir)/wrf_sst.ncl"
    - "%(ncl_code_dir)/wrf_w10.ncl"

ncl_ol_code    :                                                                      # code for producing plots for openlayers 
    - "%(ncl_code_dir)/wrf_precip_vapor.ncl"
    - "%(ncl_code_dir)/wrf_slp_vapor.ncl"
    - "%(ncl_code_dir)/wrf_w10_vapor.ncl"
    - "%(ncl_code_dir)/wrf_wspd_vapor.ncl"
    - "%(ncl_code_dir)/wrf_sst_vapor.ncl"

ncl_ol_out_dir : "%(working_dir)/ol/%iHZ"                                              # location to put openlayers compatible plots
ncl_log        : "%(working_dir)/ncl.log"
gwarp          : "%(wrftools_dir)/shellscripts/gwarp"                                  # location of gdalwarp script


#**************************************************************
# Extaction/time series
#***************************************************************
tseries_dir    : "%(working_dir)/tseries"                                              # extract time-series here 
tseries_file   : "%(tseries_dir)/tseries_d%dd_%iY-%im-%id_%iH.nc"
locations_file : $(HOME)/forecasting/locations/locations.csv
tseries_code   : ["%(wrftools_dir)/ncl/extract_time_series.ncl"]                       # location of NCL code to extract time series
ncl_opt_file   : "%(working_dir)/ncl_options.ncl"                                      # NCL file specfifying which variables get extracted
extract_hgts   : [20,50,60,70,80,90,100,110,150,200]                                   # heights to extract time series at

ncdump:
    met:
        tseries_file  : "%(tseries_dir)/tseries_d%dd_%iY-%im-%id_%iH.nc"
        tseries_vars  : [SPEED,DIRECTION,T2,TD2,SST,RIB,RAIN,SWDOWN,CLDFRAAVG,CLDFRAMAX]
        coord_vars    : [time,location,height]
        global_atts   : [GRID_ID,DOMAIN,MODEL_RUN,DX,DY]
        var_atts      : [units,description]
        dir           : "%(working_dir)/json"
        fname         : fcst_data_d%dd_%iHZ.json
        format        : json
        float_format  : "%0.3f"
        dimspec       : 
            height        : ["2D",60,80,100]
        drop          : [DOMAIN,MODEL_RUN]
        group-by      : ["init_time", "location", "variable", "height"]
        sort-by       : ["init_time", "valid_time", "location"]
        na-rep        : "null"
        rename        : null
    
    power:
        tseries_file  : "%(tseries_dir)/power_d%dd_%iY-%im-%id_%iH.nc"
        tseries_vars  : [POWER]
        coord_vars    : [time,location,height]
        global_atts   : [GRID_ID,DOMAIN,MODEL_RUN,DX,DY]
        var_atts      : [units,description]
        dir           : "%(working_dir)/json"
        fname         : power_d%dd_%iHZ.json
        format        : json
        float_format  : "%0.3f"
        dimspec       : 
            height        : [60,80,100]
        drop          : [DOMAIN,MODEL_RUN]
        group-by      : ["init_time", "location", "variable", "height"]
        sort-by       : ["init_time", "valid_time", "location"]
        na-rep        : "null"
        rename        : null
    
    aot:
        tseries_file  : "%(tseries_dir)/tseries_d%dd_%iY-%im-%id_%iH.nc"
        tseries_vars  : [SPEED,DIRECTION,T2,TD2,SST,RIB,RAIN,SWDOWN,CLDFRAAVG,CLDFRAMAX]
        global_atts   : [GRID_ID,DOMAIN,MODEL_RUN,DX,DY]
        var_atts      : [units,description]
        coord_vars    : [time,location,height]
        dir           : "%(working_dir)/aot"
        format        : aot




#**************************************************************
# Power
#***************************************************************
power_file      : "%(tseries_dir)/power_d%dd_%iY-%im-%id_%iH.nc"
pcurve_dir      : $(HOME)/forecasting/pcurves/fuga
pdist           : 100          # False or N, where N is the number of sample points to generate for each (speed,direction) pair
sstd            : 1.0          # Standard deviation to apply to wind speed at each timestep
dstd            : 3.5          # Standard deviation to apply to wind direction at each timestep
pquants         : [10,30,70,90] # power quantiles to generate, using N sample values
pnorm           : false         # Normalise power outputs by capacity



#**************************************************************
# Dispatch
#***************************************************************
dispatch.list:
  aot : 
    mailto     : "sam.hawkins@vattenfall.com"
    from       : "sam.hawkins@vattenfall.com"
    subject    : "Edinburgh forecast "
    body       : "%(working_dir)/body.txt"
    attach     : [ "%(working_dir)/aot/EDI/d01/%iy%im%id%iH.txt"]
  jepn: 
    mailto     : "jespernielsen.nissen@vattenfall.com"
    from       : "sam.hawkins@vattenfall.com"
    subject    : "WRF forecast test"
    body       : "%(working_dir)/body.txt"
    attach     : [ "%(working_dir)/plots/%iHZ/pp_d01_01.png", "%(working_dir)/plots/%iHZ/pp_d01_24.png", "%(working_dir)/plots/%iHZ/pp_d01_48.png","%(working_dir)/plots/%iHZ/pp_d01_72.png" ]
  slh : 
    mailto     : "sam.hawkins@vattenfall.com"
    from       : "sam.hawkins@vattenfall.com"
    subject    : "WRF %iHZ forecast"
    body       : "%(working_dir)/body.txt"
    attach     : [ "%(working_dir)/plots/%iHZ/pp_d01_01.png", "%(working_dir)/plots/%iHZ/pp_d01_24.png", "%(working_dir)/plots/%iHZ/pp_d01_48.png", "%(working_dir)/plots/%iHZ/pp_d01_72.png"]

  vrd : 
    mailto     : "forecasting.vet.amsterdam@etrm.vattenfall.com"
    from       : "sam.hawkins@vattenfall.com"
    subject    : "WRF Forecast Hamburg Test"
    body       : "%(working_dir)/body.txt"
    attach     : [ "%(working_dir)/aot/HAM/d01/%iy%im%id%iH.txt" ]
  
#************************************************
# Finalise
#************************************************

finalise.create : []

finalise.copy:
  - "%(working_dir)/plots/%iHZ/*.png %(web_dir)/img/%iHZ"
  - "%(working_dir)/json/*.json      %(web_dir)/data"
  
finalise.link: []
finalise.move: []
finalise.remove: 
  - "%(wps_run_dir)/GFS*"
  - "-r %(met_em_dir)"

finalise.run:
  - "zip -r %(web_dir)/img/%iHZ.zip %(web_dir)/img/%iHZ"
